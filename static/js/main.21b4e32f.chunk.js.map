{"version":3,"sources":["components/Statistic/Statistics.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/FeedbackOptionsButton/FeedbackOptionsButton.module.css","components/NotificationMessage/Notification.module.css","components/Container/Container.js","components/Statistic/Statistics.js","components/Section/Section.js","components/FeedbackOptionsButton/FeedbackOptionsButton.js","components/NotificationMessage/Notification.js","Feedback.js","index.js"],"names":["module","exports","Container","children","className","s","container","StatisticsTable","params","good","neutral","bad","total","positivePercentage","statistics","goodStatistics","middleStatistics","badStatistics","prototype","PropTypes","number","isRequired","Section","title","section","string","FeedbackOptionsButton","onLeaveFeedback","options","name","button","type","onClick","func","Notification","message","notification","Feedback","state","onGiveStatisticButton","evt","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Statistics","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21b4e32f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__4qMou\",\"feedback\":\"Statistics_feedback__2-XN6\",\"badStatistics\":\"Statistics_badStatistics__VDWbz Statistics_feedback__2-XN6\",\"middleStatistics\":\"Statistics_middleStatistics__2tMdq Statistics_feedback__2-XN6\",\"goodStatistics\":\"Statistics_goodStatistics__2OtOd Statistics_feedback__2-XN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ya7gm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2-pHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptionsButton_button__1PML1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__17g9g\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction colorChange(params) {\r\n  if (params >= 75) {\r\n    return s.goodStatistics;\r\n  } else if (params >= 50 && params < 75) {\r\n    return s.middleStatistics;\r\n  } else {\r\n    return s.badStatistics;\r\n  }\r\n}\r\n\r\nconst StatisticsTable = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <section>\r\n    <div className={s.statistics}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n    </div>\r\n\r\n    <div>\r\n      <p>Total:{total}</p>\r\n      {total < 1 ? (\r\n        <p>Positive feedback: 0</p>\r\n      ) : (\r\n        <p className={colorChange(positivePercentage)}>Positive feedback: {positivePercentage}%</p>\r\n      )}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nStatisticsTable.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptionsButton.module.css';\r\n\r\nconst FeedbackOptionsButton = ({ onLeaveFeedback, options, name }) => (\r\n  <button className={s.button} type=\"button\" onClick={options} name={name}>\r\n    {onLeaveFeedback}\r\n  </button>\r\n);\r\n\r\nFeedbackOptionsButton.prototype = {\r\n  onLeaveFeedback: PropTypes.string.isRequired,\r\n  options: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default FeedbackOptionsButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => <h2 className={s.notification}>{message}</h2>;\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Container from './components/Container';\r\nimport StatisticsTable from './components/Statistic';\r\nimport Section from './components/Section';\r\nimport FeedbackOptionsButton from './components/FeedbackOptionsButton';\r\nimport Notification from './components/NotificationMessage';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onGiveStatisticButton = evt => {\r\n    const name = evt.target.name;\r\n    this.setState(prevState => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const totalCount = this.countTotalFeedback();\r\n    const positiveCount = (good * 100) / totalCount;\r\n    return positiveCount.toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Container>\r\n        <Section title=\"Pleas leave feedback\">\r\n          <FeedbackOptionsButton\r\n            options={this.onGiveStatisticButton}\r\n            onLeaveFeedback=\"Good\"\r\n            name=\"good\"\r\n          />\r\n\r\n          <FeedbackOptionsButton\r\n            options={this.onGiveStatisticButton}\r\n            onLeaveFeedback=\"Neutral\"\r\n            name=\"neutral\"\r\n          />\r\n\r\n          <FeedbackOptionsButton\r\n            options={this.onGiveStatisticButton}\r\n            onLeaveFeedback=\"Bad\"\r\n            name=\"bad\"\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistic\">\r\n          {this.countTotalFeedback() < 1 ? (\r\n            <Notification message=\"There is no feedback\" />\r\n          ) : (\r\n            <StatisticsTable\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Feedback from './Feedback';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Feedback />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}