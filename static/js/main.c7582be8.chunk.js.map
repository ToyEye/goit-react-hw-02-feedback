{"version":3,"sources":["components/Statistic/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","prototype","PropTypes","number","isRequired","Section","title","children","string","FeedbackOptions","onLeaveFeedback","options","type","onClick","func","Feeedback","state","onButtonGoodPush","setState","prevState","onButtonNeutralPush","onButtonBadPush","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAIMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAMC,EAA7B,EAA6BA,mBAA7B,OACf,oCACI,4BAAIJ,IACJ,4BAAIC,IACJ,4BAAIC,IACJ,uCAAUC,KACPA,EAAQ,EAAK,qDACX,oDAAuBC,EAAvB,WAIbL,EAAWM,UAAY,CACnBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBJ,mBAAmBE,IAAUC,OAAOC,YAGzBT,QCpBTU,EAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAQC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MAITF,EAAQJ,UAAY,CAChBK,MAAOJ,IAAUM,QAGNH,QCXTI,EAAkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAgBC,EAAlB,EAAkBA,QAAlB,OACpB,wBAAQC,KAAK,SAASC,QAASH,EAA/B,SAAiDC,KAGrDF,EAAgBR,UAAY,CACxBU,QAAST,IAAUM,OAAOJ,WAC1BM,gBAAgBR,IAAUY,KAAKV,YAGpBK,QCNTM,E,4MAEJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,iBAAmB,WACjB,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAACvB,KAAMuB,EAAUvB,KAAO,O,EAInCwB,oBAAsB,WACpB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CAACtB,QAASsB,EAAUtB,QAAU,O,EAIzCwB,gBAAkB,WAChB,EAAKH,UAAS,SAAAC,GACZ,MAAO,CAACrB,IAAKqB,EAAUrB,IAAM,O,EAIjCwB,mBAAqB,WACnB,MAA+B,EAAKN,MAGpC,OAHA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzByB,gCAAkC,WAIhC,OAD6B,IAFZ,EAAKP,MAAdpB,KACW,EAAK0B,sB,4CAK1B,WACE,MAA+BE,KAAKR,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,eAAC,EAAD,CAASQ,MAAM,uBAAf,UACE,cAAC,EAAD,CAAiBK,QAAQ,OAAOD,gBAAiBc,KAAKP,mBACtD,cAAC,EAAD,CAAiBN,QAAQ,UAAUD,gBAAiBc,KAAKJ,sBACzD,cAAC,EAAD,CAAiBT,QAAQ,MAAMD,gBAAiBc,KAAKH,qBAGvD,cAAC,EAAD,CAASf,MAAM,YAAf,SACE,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKF,qBACZtB,mBAAoBwB,KAAKD,6C,GAxDbE,aA+DTV,IC/DfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7582be8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import Notification from \"../NotificationMessage\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total,positivePercentage }) => (\r\n    <section>\r\n        <p>{good}</p>\r\n        <p>{neutral}</p>\r\n        <p>{bad}</p>\r\n        <p>Total:{total}</p>\r\n          {total < 1 ? (<p>Positive feedback: 0</p>)\r\n          : (<p>Positive feedback: {positivePercentage}%</p>)}\r\n    </section>\r\n)\r\n\r\nStatistics.prototype = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({title , children }) => (\r\n    <section>\r\n        <h1>{title}</h1>\r\n        {children}\r\n    </section>\r\n)\r\n\r\nSection.prototype = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({onLeaveFeedback,options, }) => (\r\n    <button type=\"button\" onClick={onLeaveFeedback}>{options}</button>\r\n)\r\n\r\nFeedbackOptions.prototype = {\r\n    options: PropTypes.string.isRequired,\r\n    onLeaveFeedback:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Statistics from \"./components/Statistic/\";\nimport Section from './components/Section/';\nimport FeedbackOptions from './components/FeedbackOptions'\n\nclass Feeedback extends Component{\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n  onButtonGoodPush = () => {\n    this.setState(prevState => {\n      return {good: prevState.good + 1};\n    })\n  }\n\n  onButtonNeutralPush = () => {\n    this.setState(prevState => {\n      return {neutral: prevState.neutral + 1};\n    })\n  }\n\n  onButtonBadPush = () => {\n    this.setState(prevState => {\n      return {bad: prevState.bad + 1};\n    })\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let total = 0;\n     total = good + neutral +bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalCount = this.countTotalFeedback()\n    const positiveCount = good * 100 / totalCount ;\n    return positiveCount;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Pleas leave feedback\" >\n          <FeedbackOptions options=\"Good\" onLeaveFeedback={this.onButtonGoodPush} />\n          <FeedbackOptions options=\"Neutral\" onLeaveFeedback={this.onButtonNeutralPush}/>\n          <FeedbackOptions options=\"Bad\" onLeaveFeedback={this.onButtonBadPush}/>\n        </Section>\n\n        <Section title=\"Statistic\" >\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feeedback;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Feeedback from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Feeedback />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}